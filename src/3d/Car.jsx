/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
author: Virginia Vidonis (https://sketchfab.com/virginiavidonis)
license: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
source: https://sketchfab.com/3d-models/60s-volkswagen-beetle-fe1d9199566448899c4175b779d94019
title: '60S Volkswagen Beetle
*/

import { Vector3 } from "three";
import React, { useRef } from "react";
import { useGLTF } from "@react-three/drei";
import { useFrame } from "@react-three/fiber";
import useKeyControls from "../hooks/useKeyControls";

let rotateAngle;
let rotateVector = new Vector3(0, 1, 0);

export function Car(props) {
  const { nodes, materials } = useGLTF("/assets/60s_volkswagen_beetle.glb");

  const { forward, backward, left, right, shift } = useKeyControls();
  const ref = useRef();

  useFrame((_, delta) => {
    rotateAngle = (Math.PI / 2) * delta;

    if (forward) {
      ref.current.translateZ(2 * delta);
    }
    if (backward) {
      ref.current.translateZ(-2 * delta);
    }
    if (left) {
      ref.current.rotateOnAxis(rotateVector, rotateAngle);
    }
    if (right) {
      ref.current.rotateOnAxis(rotateVector, -rotateAngle);
    }
    if (shift) {
      ref.current.translateZ(3 * delta);
    }
  });

  return (
    <group ref={ref} {...props} dispose={null}>
      <group rotation={[-Math.PI / 2, 0, 0]}>
        <group rotation={[Math.PI / 2, 0, 0]} scale={0.01}>
          <group rotation={[-Math.PI / 2, 0, 0]} scale={100}>
            <mesh
              castShadow
              receiveShadow
              geometry={nodes.BEETLE_OPTI_BAKE_0.geometry}
              material={materials.BAKE}
            />
          </group>
        </group>
      </group>
    </group>
  );
}

useGLTF.preload("/60s_volkswagen_beetle.glb");
